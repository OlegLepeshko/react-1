{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/dialogs.module.css","components/Profile/Paginator.module.css","components/Profile/MyPost/MyPosts.module.css","components/Header/Header.module.css","components/Users/users.module.css","components/Profile/MyPost/Post/Post.module.css","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reduser.js","redux/auth-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogsItem/DialogsItem.js","components/Dialogs/DialogsItem/Message/Message.js","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Profile/Paginator.jsx","api/assest/images/goose.png","components/Users/User.jsx","components/Users/Users.jsx","api/assest/images/preloader.svg","components/common/Preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatuswhisHooks.jsx","components/Profile/ProfileInfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/login/login.js","App.js","index.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","page","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","SET_PHOTO_SUCCESS","initialState","posts","id","message","likesCount","newPostText","profile","setStatus","type","profileReducer","state","action","newPost","newText","photos","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogs","name","messages","newMessageBody","dialogsReducer","body","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","unFollowSuccess","sentCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnFollow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","map","u","followed","count","filter","SET_USER_DATA","email","login","isAuth","setAuthUserData","authReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","DialogItem","props","path","dialog","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","value","onChange","e","target","updateNewMessageBody","placeholder","onClick","sendMessage","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","updateNewMessageBodyCreator","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","cn","selectedPages","pageNumber","User","user","src","small","userPhoto","disabled","some","Users","Preloader","style","backgroundColor","preloader","UsersContainer","bind","items","totalCount","Post","MyPosts","memo","postsElements","newPostElement","createRef","postsBlock","text","current","updateNewPostText","ref","addPost","MyPostsContainer","updateNewPostTextActionCreator","ProfileStatusWithHooks","editMode","setEditMode","useEffect","profit","onDoubleClick","currentTarget","autoFocus","onBlur","ProfileData","goToEditMode","isOwner","contact","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","key","contactTitle","contactValue","Contact","ProfileDataForm","ProfileInfo","descriptionBlock","large","mainPhoto","files","length","Profile","ProfileContainer","match","params","getUserProfile","refreshProfile","prevProps","prevState","snapshot","file","withRouter","Header","header","loginBlock","HeaderContainer","getAuthUserData","MyForm","App","render","DialogsContainer","ReactDOM","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,mBCArFD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,+BAA+B,QAAU,6BAA6B,OAAS,8B,mBCAtKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,mBCAlLD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,cAAgB,mC,mBCAtHD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,mBCAnED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,8B,mBCAtED,EAAOC,QAAU,CAAC,KAAO,qB,2ICGnBC,E,MAAWC,OAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAa,CACR,UAAW,0CAKPC,EAAW,CACpBC,SADoB,WACe,IAA1BC,EAAyB,uDAAlB,EAAGC,EAAe,uDAAJ,GAC1B,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAyCC,IAC3CE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,OAPoB,SAObC,GACH,OAAOd,EAASe,KAAT,iBAAwBD,KAGnCE,SAXoB,SAWXF,GACL,OAAOd,EAASiB,OAAT,iBAA0BH,KAGpCI,WAfmB,SAeRJ,GAER,OADAK,QAAQC,KAAK,8CACNC,EAAWH,WAAWJ,KAItBO,EAAa,CAEtBH,WAFsB,SAEXJ,GACP,OAAOd,EAASS,IAAI,WAAaK,IAErCQ,UALsB,SAKZR,GACN,OAAOd,EAASS,IAAI,kBAAoBK,IAE5CS,aARsB,SAQTC,GACT,OAAOxB,EAASyB,IAAT,iBAA+B,CAACD,OAAQA,KAEnDE,UAXsB,SAWZC,GACN,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClB3B,EAASyB,IAAT,gBAA8BG,EAAU,CAC3CxB,QAAS,CACL,eAAgB,2BAMrB2B,EAAU,WAEjB,OAAQ/B,EAASS,IAAT,YCxDRuB,EAAW,WACXC,EAAuB,uBACvBC,EAAmB,mBACnBC,EAAa,aACbC,EAAoB,oBAEtBC,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,mBAAoBC,WAAY,IACjD,CAACF,GAAI,EAAGC,QAAS,qBAAuBC,WAAY,IACpD,CAACF,GAAI,EAAGC,QAAS,SAAUC,WAAY,IACvC,CAACF,GAAI,EAAGC,QAAS,OAAQC,WAAY,KAEzCC,YAAa,mBACbC,QAAS,KACTnB,OAAQ,IAmDCoB,EAAY,SAACpB,GAAD,MAAa,CAACqB,KAAMV,EAAYX,WA4B1CsB,EA5EQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCAErD,OAAQA,EAAOH,MACX,KAAKb,EACD,IAAIiB,EAAU,CACVV,GAAI,EACJC,QAASO,EAAML,YACfD,WAAY,GAEhB,OAAO,2BACAM,GADP,IAEIT,MAAM,GAAD,mBAAMS,EAAMT,OAAZ,CAAmBW,IACxBP,YAAa,KAGrB,KAAKT,EACD,OAAO,2BACAc,GADP,IAEIL,YAAaM,EAAOE,UAG5B,KAAKhB,EACD,OAAO,2BACAa,GADP,IAEIJ,QAASK,EAAOL,UAGxB,KAAKR,EACD,OAAO,2BACAY,GADP,IAEIvB,OAAQwB,EAAOxB,SAGvB,KACIY,EACI,OAAO,2BACAW,GADP,IACcJ,QAAQ,2BAAKI,EAAMJ,SAAZ,IAAqBQ,OAAQH,EAAOG,WAKjE,QACI,OAAOJ,IC9DbK,EAA0B,0BAC1BC,EAAe,eAEjBhB,EAAe,CACfiB,QAAS,CACL,CAACf,GAAI,EAAGgB,KAAM,UACd,CAAChB,GAAI,EAAGgB,KAAM,UACd,CAAChB,GAAI,EAAGgB,KAAM,SACd,CAAChB,GAAI,EAAGgB,KAAM,SACd,CAAChB,GAAI,EAAGgB,KAAM,UACd,CAAChB,GAAI,EAAGgB,KAAM,WAElBC,SAAU,CACN,CAACjB,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,6BACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,OAErBiB,eAAgB,IA0BLC,EAvBQ,WAAmC,IAAlCX,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,KAAKO,EACD,OAAO,2BACAL,GADP,IAEIU,eAAgBT,EAAOW,OAE/B,KAAKN,EACD,IAAIM,EAAOZ,EAAMU,eACjB,OAAO,2BACAV,GADP,IAEIU,eAAgB,GAChBD,SAAS,GAAD,mBAAMT,EAAMS,UAAZ,CAAsB,CAACjB,GAAI,EAAGC,QAASmB,OAEvD,QACI,OAAOZ,ICrCfV,EAAe,GAIJuB,EAHQ,WAAmC,IAAlCb,EAAiC,uDAAzBV,EAC5B,OAAOU,GCALc,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAA+B,+BAEjC9B,EAAe,CACf+B,MAAO,GACP5D,SAAU,GACV6D,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAoDZC,EAAgB,SAAC3D,GAAD,MAAa,CAAC+B,KAAMgB,EAAQ/C,WAC5C4D,EAAkB,SAAC5D,GAAD,MAAa,CAAC+B,KAAMiB,EAAUhD,WAEhD6D,EAAkB,SAACL,GAAD,MAAkB,CAACzB,KAAMmB,EAAkBM,gBAE7DM,EAAmB,SAACL,GAAD,MAAiB,CAAC1B,KAAMqB,EAAoBK,eAC/DM,EAA0B,SAACN,EAAYzD,GAAb,MAAyB,CAC5D+B,KAAMsB,EACNI,aACAzD,WAcEgE,EAAc,uCAAG,WAAOC,EAAUjE,EAAQkE,EAAWC,GAApC,SAAAC,EAAA,6DACnBH,EAASF,GAAwB,EAAM/D,IADpB,SAEEkE,EAAUlE,GAFZ,OAGc,IAHd,OAGNF,KAAKuE,YACdJ,EAASE,EAAcnE,IAE3BiE,EAASF,GAAwB,EAAO/D,IANrB,2CAAH,4DAmBLsE,EA3FM,WAAmC,IAAlCrC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,KAAKgB,EACD,OAAO,2BACAd,GADP,IAEIqB,MAAOrB,EAAMqB,MAAMiB,KAAI,SAAAC,GACnB,OAAIA,EAAE/C,KAAOS,EAAOlC,OACT,2BAAIwE,GAAX,IAAcC,UAAU,IAErBD,OAGnB,KAAKxB,EACD,OAAO,2BACAf,GADP,IAEIqB,MAAOrB,EAAMqB,MAAMiB,KAAI,SAAAC,GACnB,OAAIA,EAAE/C,KAAOS,EAAOlC,OACT,2BAAIwE,GAAX,IAAcC,UAAU,IAErBD,OAGnB,KAAKvB,EACD,OAAO,2BAAIhB,GAAX,IAAkBqB,MAAOpB,EAAOoB,QAEpC,KAAKJ,EACD,OAAO,2BAAIjB,GAAX,IAAkBuB,YAAatB,EAAOsB,cAE1C,KAAKL,EACD,OAAO,2BAAIlB,GAAX,IAAkBsB,gBAAiBrB,EAAOwC,QAE9C,KAAKtB,EACD,OAAO,2BAAInB,GAAX,IAAkBwB,WAAYvB,EAAOuB,aAGzC,KAAKJ,EACD,OAAO,2BACApB,GADP,IAEIyB,oBAAqBxB,EAAOuB,WAAP,sBACXxB,EAAMyB,qBADK,CACgBxB,EAAOlC,SACtCiC,EAAMyB,oBAAoBiB,QAAO,SAAAlD,GAAE,OAAIA,IAAOS,EAAOlC,YAGnE,QACI,OAAOiC,IC7Db2C,EAAgB,gBAGlBrD,EAAe,CACfvB,OAAQ,KACR6E,MAAO,KACPC,MAAO,KACPC,QAAQ,GAmBCC,EAAkB,SAAChF,EAAQ6E,EAAOC,GAAhB,MAA2B,CAAC/C,KAAM6C,EAAe9E,KAAM,CAACE,SAAQ6E,QAAOC,WAQvFG,EAxBK,WAAmC,IAAlChD,EAAiC,uDAAzBV,EAAcW,EAAW,uCAClD,OAAQA,EAAOH,MACX,KAAK6C,EAED,OAAO,uCACA3C,GACAC,EAAOpC,MAFd,IAGIiF,QAAQ,IAGhB,QACI,OAAO9C,I,QCdfiD,EAAWC,YAAgB,CAC3BC,YAAapD,EACbqD,YAAazC,EACb0C,QAASxC,EACTyC,UAAWjB,EACXkB,KAAMP,IAINQ,EAAQC,YAAYR,EAAUS,YAAgBC,MAElDC,OAAOJ,MAAQA,EAGAA,Q,4ECOAK,GA1BA,WACX,OACI,sBAAKC,UAAWC,KAAEC,IAAlB,UACI,qBAAKF,UAAWC,KAAEE,KAAlB,SACI,cAAC,KAAD,CAASC,GAAG,WAAWC,gBAAiBJ,KAAEK,WAA1C,uBAEJ,qBAAKN,UAAS,UAAKC,KAAEE,KAAP,YAAeF,KAAEM,QAA/B,SACI,cAAC,KAAD,CAASH,GAAG,WAAWC,gBAAiBJ,KAAEK,WAA1C,wBAEJ,qBAAKN,UAAS,UAAKC,KAAEE,KAAP,YAAeF,KAAEM,QAA/B,SACI,cAAC,KAAD,CAASH,GAAG,SAASC,gBAAiBJ,KAAEK,WAAxC,qBAGJ,qBAAKN,UAAWC,KAAEE,KAAlB,SACI,uCAEJ,qBAAKH,UAAWC,KAAEE,KAAlB,SACI,wCAEJ,qBAAKH,UAAWC,KAAEE,KAAlB,SACI,+C,4BCZDK,GARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAM/E,GAE/B,OAAO,qBAAKsE,UAAWC,KAAEU,OAAS,IAAMV,KAAEM,OAAnC,SACH,cAAC,KAAD,CAASH,GAAIM,EAAb,SAAoBD,EAAM/D,UCDnBkE,GAJC,SAACH,GACb,OAAO,qBAAKT,UAAWC,KAAEU,OAAlB,SAA2BF,EAAM9E,WCoC7BkF,GAnCC,SAACJ,GAEb,IAAIvE,EAAQuE,EAAMnB,YAEdwB,EAAkB5E,EAAMO,QAAQ+B,KAAK,SAAAuC,GAAC,OAAI,cAAC,GAAD,CAAYrE,KAAMqE,EAAErE,KAAiBhB,GAAIqF,EAAErF,IAAZqF,EAAErF,OAC3EsF,EAAmB9E,EAAMS,SAAS6B,KAAK,SAAAyC,GAAC,OAAI,cAAC,GAAD,CAAStF,QAASsF,EAAEtF,SAAcsF,EAAEvF,OAChFkB,EAAiBV,EAAMU,eAW3B,OACI,sBAAKoD,UAAWC,KAAExD,QAAlB,UACI,qBAAKuD,UAAWC,KAAEiB,aAAlB,SACMJ,IAEN,sBAAKd,UAAWC,KAAEtD,SAAlB,UACI,8BAAOqE,IACP,gCACI,8BAAK,0BAAUG,MAAOvE,EACPwE,SAdN,SAACC,GACtB,IAAIvE,EAAOuE,EAAEC,OAAOH,MACpBV,EAAMc,qBAAqBzE,IAaA0E,YAAY,yBAC3B,8BAAK,wBAAQC,QApBJ,WACrBhB,EAAMiB,eAmBW,8B,4CC7BrBC,GAA6B,SAACzF,GAAD,MAAa,CAC1C8C,OAAQ9C,EAAMuD,KAAKT,SAEV4C,GAAmB,SAACC,GAAe,IACtCC,EADqC,2KAG/B,OAAKC,KAAKtB,MAAMzB,OACT,cAAC6C,EAAD,eAAeE,KAAKtB,QADI,cAAC,KAAD,CAAUL,GAAG,eAHb,GACX4B,IAAMH,WAQpC,OADmCI,aAASN,GAATM,CAAsCH,ICU/EI,eACID,cAnBkB,SAAC/F,GACnB,MAAO,CACHoD,YAAapD,EAAMoD,gBAIF,SAACpB,GACtB,MAAO,CACHwD,YAAa,WACTxD,EVyB6B,CAAClC,KAAMQ,KUvBxC+E,qBAAsB,SAACzE,GACnBoB,EVuB+B,SAACpB,GAAD,MACtC,CAACd,KAAMO,EAAyBO,KAAMA,GUxBtBqF,CAA4BrF,SAQ7C8E,GAFJM,CAGGrB,I,0DCYauB,GAhCA,SAAC,GAIb,IAJ2F,IAA7E5E,EAA4E,EAA5EA,gBAAiB7D,EAA2D,EAA3DA,SAAU8D,EAAiD,EAAjDA,YAAa4E,EAAoC,EAApCA,cAAoC,IAArBC,mBAAqB,MAAP,GAAO,EACtFC,EAAaC,KAAKC,KAAMjF,EAAkB7D,GAE1C+I,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAEf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GAPgD,EAQlDQ,mBAAS,GARyC,oBAQrFC,EARqF,KAQtEC,EARsE,KAStFC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE7C,OAAO,sBAAKtC,UAAWmD,KAAOC,UAAvB,UACFL,EAAgB,GACjB,wBAAQtB,QAAS,WAAOuB,EAAiBD,EAAc,IAAvD,oBACCL,EACI9D,QAAO,SAAAyE,GAAC,OAAIA,GAAKJ,GAAyBI,GAAKH,KAC/C1E,KAAI,SAAC6E,GACF,OAAO,sBAAMrD,UAAYsD,KAAG,gBACvBH,KAAOI,cAAgB9F,IAAgB4F,GACzCF,KAAOK,YAEG/B,QAAS,SAACJ,GACVgB,EAAcgB,IALpB,SAMPA,GAHoBA,MAK3BR,EAAeE,GAChB,wBAAQtB,QAAW,WAAMuB,EAAiBD,EAAc,IAAxD,sB,oBCnCO,OAA0B,kCCyC1BU,GAnCF,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAM/F,EAA2C,EAA3CA,oBAAqBxD,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,OAEhD,OACI,gCACQ,iCACI,8BACG,cAAC,KAAD,CAASoG,GAAI,YAAcsD,EAAKhI,GAAhC,SACC,qBAAKiI,IAA0B,MAArBD,EAAKpH,OAAOsH,MAAgBF,EAAKpH,OAAOsH,MAAQC,GACrD7D,UAAWmD,KAAOU,gBAG3B,8BACKH,EAAKhF,SACA,wBAAQoF,SAAUnG,EAAoBoG,MAAK,SAAArI,GAAE,OAAIA,IAAOgI,EAAKhI,MAAK+F,QAAS,WACzEtH,EAASuJ,EAAKhI,KADhB,sBAGA,wBAAQoI,SAAUnG,EAAoBoG,MAAK,SAAArI,GAAE,OAAIA,IAAOgI,EAAKhI,MAAK+F,QAAS,WACzEzH,EAAO0J,EAAKhI,KADd,yBAKlB,iCACQ,iCACI,8BAAMgI,EAAKhH,OACX,8BAAMgH,EAAK/I,YAEf,iCACI,8BAAM,0BACN,8BAAM,iCCJfqJ,GAxBD,SAAC,GAE8B,IAF5BzG,EAE2B,EAF3BA,MAAO5D,EAEoB,EAFpBA,SACT8D,EAC6B,EAD7BA,YAAa4E,EACgB,EADhBA,cAAeC,EACC,EADDA,YAAY9E,EACX,EADWA,gBAAgBG,EAC3B,EAD2BA,oBACpDxD,EAAyB,EAAzBA,SAAUH,EAAe,EAAfA,OAEzB,OAAO,gCACN,8BACK,cAAC,GAAD,CAAWwD,gBAAiBA,EAAiB7D,SAAUA,EAC5C8D,YAAaA,EAAa4E,cAAeA,EACzCC,YAAaA,MAE1B,8BAEI/E,EAAMiB,KAAI,SAAAC,GAAC,OAAI,cAAC,GAAD,CAAMiF,KAAMjF,EAENd,oBAAqBA,EACrBxD,SAAUA,EACVH,OAAQA,GAHHyE,EAAE/C,aCnBzB,OAA0B,sCCS1BuI,GANC,SAACxD,GACb,OAAO,qBAAMyD,MAAQ,CAAEC,gBAAiB,SAAjC,SACH,qBAAKR,IAAKS,QCkBZC,G,+MAKFhC,cAAgB,SAACmB,GACb,EAAK/C,MAAMhH,SAAS+J,EAAY,EAAK/C,MAAM9G,W,mEAJ3CoI,KAAKtB,MAAMhH,SAASsI,KAAKtB,MAAMhD,YAAasE,KAAKtB,MAAM9G,SAAUoI,KAAKtB,MAAM4B,iB,+BAQ5E,OAAO,qCACFN,KAAKtB,MAAM/C,WAAa,cAAC,GAAD,IAAe,KACxC,cAAC,GAAD,CAAOF,gBAAiBuE,KAAKtB,MAAMjD,gBAC5B7D,SAAUoI,KAAKtB,MAAM9G,SACrB8D,YAAasE,KAAKtB,MAAM/G,KACxB2I,cAAeN,KAAKM,cACpB9E,MAAOwE,KAAKtB,MAAMlD,MAClBvD,OAAQ+H,KAAKtB,MAAMzG,OACnBG,SAAU4H,KAAKtB,MAAMtG,SACrBwD,oBAAqBoE,KAAKtB,MAAM9C,6B,GAnBtBqE,IAAMH,WAkDnBK,eACVN,GACDK,cAzBiB,SAAC/F,GACnB,MAAO,CACHqB,MAAOrB,EAAMsD,UAAUjC,MACvB5D,SAAUuC,EAAMsD,UAAU7F,SAC1B6D,gBAAiBtB,EAAMsD,UAAUhC,gBACjCC,YAAavB,EAAMsD,UAAU/B,YAC7BC,WAAYxB,EAAMsD,UAAU9B,WAC5BC,oBAAqBzB,EAAMsD,UAAU7B,uBAkBf,CAAC3D,OfwBT,SAACC,GACnB,8CAAO,WAAOiE,GAAP,SAAAG,EAAA,sDACDJ,EAAeC,EAAUjE,EAAQT,EAASQ,OAAOsK,KAAK9K,GAAWoE,GADhE,2CAAP,uDezBmCzD,Sf8Bf,SAACF,GACrB,8CAAO,WAAOiE,GAAP,SAAAG,EAAA,sDACFJ,EAAeC,EAAUjE,EAAQT,EAASW,SAASmK,KAAK9K,GAAWqE,GADjE,2CAAP,uDe9BQC,kBACDE,0BAAyBvE,SfIZ,SAACgE,EAAa9D,GAClC,8CAAO,WAAOuE,GAAP,eAAAG,EAAA,6DACHH,EAASH,GAAiB,IAC1BG,EAASJ,EAAgBL,IAFtB,SAGcjE,EAASC,SAASgE,EAAa9D,GAH7C,OAGCI,EAHD,OAIHmE,EAASH,GAAiB,IAC1BG,GAjBiBX,EAiBCxD,EAAKwK,MAjBK,CAACvI,KAAMkB,EAAWK,WAkB9CW,GAhB2BV,EAgBCzD,EAAKyK,WAhBe,CAACxI,KAAMoB,EAAuBuB,MAAOnB,KAUlF,iCAVuB,IAACA,EAFVD,IAYd,OAAP,yDeTY2E,CAKZmC,I,wCC/DWI,GAZF,SAAChE,GACV,OACI,sBAAKT,UAAWC,KAAEE,KAAlB,UACI,qBAAKwD,IAAI,4FACPlD,EAAM9E,QACR,gCACI,wCADJ,IACwB8E,EAAM7E,kBC8B3B8I,GAnCC1C,IAAM2C,MAAK,SAAClE,GAExB,IAAImE,EACAnE,EAAMhF,MAAM+C,KAAK,SAAA6E,GAAC,OAAI,cAAC,GAAD,CAAM1H,QAAS0H,EAAE1H,QAASC,WAAYyH,EAAEzH,gBAE9DiJ,EAAiB7C,IAAM8C,YAW3B,OACI,sBAAK9E,UAAWC,KAAE8E,WAAlB,UACI,0CACA,gCACI,8BACI,0BAAU3D,SAVP,WACf,IAAI4D,EAAOH,EAAeI,QAAQ9D,MAClCV,EAAMyE,kBAAkBF,IAQwBG,IAAKN,EAC/B1D,MAAOV,EAAM5E,gBAE3B,8BACI,wBAAQ4F,QAlBR,WACZhB,EAAM2E,WAiBM,2BAGR,qBAAKpF,UAAWC,KAAExE,MAAlB,SACMmJ,UCPHS,GAFUpD,cAnBD,SAAC/F,GACrB,MAAO,CACHT,MAAOS,EAAMmD,YAAY5D,MACzBI,YAAaK,EAAMmD,YAAYxD,gBAIZ,SAACqC,GACxB,MAAO,CACHgH,kBAAmB,SAACF,GAChB,IAAI7I,ErB8E8B,SAAC6I,GAAD,MACzC,CAAChJ,KAAMZ,EAAsBiB,QAAS2I,GqB/ElBM,CAA+BN,GAC5C9G,EAAS/B,IAEbiJ,QAAS,WACLlH,ErBgD+B,CAAClC,KAAMb,QqB3CzB8G,CAA6CyC,I,oBCcvDa,GAjCgB,SAAC9E,GAAW,IAAD,EACRqC,oBAAS,GADD,oBACjC0C,EADiC,KACvBC,EADuB,OAEZ3C,mBAASrC,EAAM9F,QAFH,oBAEjCA,EAFiC,KAEzBoB,EAFyB,KAGtC2J,qBAAW,WACV3J,EAAU0E,EAAM9F,UACd,CAAC8F,EAAM9F,SAWV,OACI,iCACM6K,GACF,sBAAKxF,UAAWC,KAAE0F,OAAlB,UACD,wCAAe,uBAAMC,cAdH,WACrBH,GAAY,IAaM,UAAwChF,EAAM9F,QAAU,QAAxD,UAGb6K,GACD,8BACI,uBAAOpE,SAZG,SAACC,GACnBtF,EAAWsF,EAAEwE,cAAc1E,QAWc2E,WAAW,EAAMC,OAhBnC,WACvBN,GAAY,GACXhF,EAAM/F,aAAaC,IAeZwG,MAAOxG,UCOjBqL,GAAc,SAAC,GAAuC,IAAtClK,EAAqC,EAArCA,QAASmK,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QACzC,OACI,sBAAKlG,UAAWC,KAAE0F,OAAlB,UACKO,GAAW,8BACR,wBAAQzE,QAASwE,EAAcjG,UAAWC,KAAE0F,OAA5C,oBAEJ,sBAAK3F,UAAWC,KAAEkG,QAAlB,UACI,4CADJ,KACyBrK,EAAQsK,YAEjC,gCACI,oDADJ,KACiCtK,EAAQuK,eAAiB,MAAQ,QAEjEvK,EAAQuK,gBACT,gCACI,yDADJ,KACsCvK,EAAQwK,6BAG9C,gCACI,2CADJ,KACwBxK,EAAQyK,WAEhC,gCACI,2CADJ,MACyBC,OAAOC,KAAK3K,EAAQ4K,UAAUlI,KAAI,SAAAmI,GACvD,OAAO,cAAC,GAAD,CAAmBC,aAAcD,EAAKE,aAAc/K,EAAQ4K,SAASC,IAAvDA,aAM/BG,GAAU,SAAC,GAAkC,IAAjCF,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OAAO,sBAAK7G,UAAWC,KAAEkG,QAAlB,UAA2B,4BAAIS,IAA/B,KAAmDC,MAExDE,GAAkB,SAAC,GAAc,EAAbjL,QACtB,OAAO,qBAAKkE,UAAWC,KAAEkG,QAAlB,SACK,wCAKDa,GAtEK,SAAC,GAA0D,IAAzDlL,EAAwD,EAAxDA,QAASnB,EAA+C,EAA/CA,OAAQD,EAAuC,EAAvCA,aAAcwL,EAAyB,EAAzBA,QAASrL,EAAgB,EAAhBA,UAAgB,EAC5CiI,oBAAS,GADmC,oBACrE0C,EADqE,KAC3DC,EAD2D,KAG1E,IAAK3J,EACD,OAAO,cAAC,GAAD,IAUX,OACI,8BACI,sBAAKkE,UAAWC,KAAEgH,iBAAlB,UACI,qBAAKtD,IAAK7H,EAAQQ,OAAO4K,OAASrD,GAAW7D,UAAWC,KAAEkH,YACzDjB,GAAW,uBAAOlK,KAAM,OAAQoF,SAXjB,SAACC,GACrBA,EAAEC,OAAO8F,MAAMC,QACfxM,EAAUwG,EAAEC,OAAO8F,MAAM,OAUpB5B,EACK,cAAC,GAAD,CAAiB1J,QAASA,IAC1B,cAAC,GAAD,CAAamK,aAAc,WACzBR,GAAY,IACb3J,QAASA,EAASoK,QAASA,IAClC,cAAC,GAAD,CAAwBvL,OAAQA,EAAQD,aAAcA,UCXvD4M,GAbC,SAAC7G,GACb,OACI,gCACK,cAAC,GAAD,CAAa5F,UAAW4F,EAAM5F,UACjBqL,QAASzF,EAAMyF,QACfpK,QAAS2E,EAAM3E,QACfnB,OAAQ8F,EAAM9F,OACdD,aAAc+F,EAAM/F,eAClC,cAAC,GAAD,QCLN6M,G,mLAEF,IAAItN,EAAS8H,KAAKtB,MAAM+G,MAAMC,OAAOxN,OAChCA,IACDA,EAAS,GAEb8H,KAAKtB,MAAMiH,eAAezN,GAC1B8H,KAAKtB,MAAMhG,UAAUR,K,0CAGpB8H,KAAK4F,mB,yCAEaC,EAAWC,EAAWC,GACpC/F,KAAKtB,MAAM+G,MAAMC,OAAOxN,SAAY2N,EAAUJ,MAAMC,OAAOxN,QAC5D8H,KAAK4F,mB,+BAML,OACI,cAAC,GAAD,2BAAa5F,KAAKtB,OAAlB,IACSyF,SAAWnE,KAAKtB,MAAM+G,MAAMC,OAAOxN,OACnC6B,QAASiG,KAAKtB,MAAM3E,QACpBnB,OAAQoH,KAAKtB,MAAM9F,OACnBD,aAAcqH,KAAKtB,MAAM/F,aACzBG,UAAWkH,KAAKtB,MAAM5F,iB,GA1BZmH,IAAMH,WAkCtBK,eACXD,cALkB,SAAC/F,GAAD,MAAY,CAC9BJ,QAASI,EAAMmD,YAAYvD,QAC3BnB,OAAQuB,EAAMmD,YAAY1E,UAGD,CAAC+M,ezB2BA,SAACzN,GAAD,8CAAY,WAAOiE,GAAP,eAAAG,EAAA,sEACjB7E,EAASa,WAAWJ,GADH,OAClCH,EADkC,OAEtCoE,GAJ2BpC,EAIHhC,EAASC,KAJO,CAACiC,KAAMX,EAAkBS,aAE3B,iCAFZ,IAACA,IAEW,OAAZ,uDyB3BgBrB,UzBgCrB,SAACR,GAAD,8CAAY,WAAOiE,GAAP,eAAAG,EAAA,sEACZ7D,EAAWC,UAAUR,GADT,OAC7BH,EAD6B,OAEjCoE,EAASnC,EAAUjC,EAASC,OAFK,2CAAZ,uDyBhCgCW,azBqC7B,SAACC,GAAD,8CAAY,WAAOuD,GAAP,SAAAG,EAAA,sEACf7D,EAAWE,aAAaC,GADT,OAEH,IAFG,OAEvBZ,KAAKuE,YACdJ,EAASnC,EAAUpB,IAHa,2CAAZ,uDyBrC0CE,UzB2C7C,SAACkN,GAAD,8CAAU,WAAO7J,GAAP,eAAAG,EAAA,sEACV7D,EAAWK,UAAUkN,GADX,OAEE,KAD7BjO,EAD2B,QAElBC,KAAKuE,YACdJ,GApByB5B,EAoBExC,EAASC,KAAKA,KAAKuC,OApBT,CAACN,KAAMT,EAAmBe,YAiBpC,iCAjBH,IAACA,IAiBE,OAAV,yDyB1CrB0L,KACApG,GAHWM,CAIbqF,I,oBChCaU,GAXA,SAACxH,GACZ,OAAO,yBAAQT,UAAWC,KAAEiI,OAArB,UACH,qBAAKvE,IAAI,6FAET,qBAAK3D,UAAWC,KAAEkI,WAAlB,SACM1H,EAAMzB,OAASyB,EAAM1B,MACjB,cAAC,KAAD,CAASqB,GAAI,SAAb,yBCJZgI,G,sLAEErG,KAAKtB,MAAM4H,oB,+BAIX,OAAO,cAAC,GAAD,eAAYtG,KAAKtB,Y,GANFuB,IAAMH,WAcrBI,iBALS,SAAC/F,GAAD,MAAY,CAChC8C,OAAQ9C,EAAMuD,KAAKT,OACnBD,MAAO7C,EAAMuD,KAAKV,SAGkB,CAACsJ,gBvBSV,yDAAM,WAAOnK,GAAP,uBAAAG,EAAA,sEACdnD,IADc,OAEF,KAD7BpB,EAD+B,QAEtBC,KAAKuE,aAAmB,EACFxE,EAASC,KAAKA,KAAlC2B,EADqB,EACrBA,GAAIqD,EADiB,EACjBA,MAAOD,EADU,EACVA,MAChBZ,EAASe,EAAgBvD,EAAIoD,EAAOC,KAJX,2CAAN,wDuBThBkD,CAA4CmG,IC0B5CE,GAzCA,SAAC7H,GAEZ,OACI,gCACI,8BAAK,yCACL,iCACI,8BACI,uBAAOe,YAAa,YAExB,8BACI,uBAAOA,YAAa,eAExB,gCACI,uBAAOxF,KAAK,aADhB,kBAGA,8BACI,oDCYLuM,GAvBH,WACR,OACI,sBAAKvI,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,KAAD,CAAOU,KAAK,WACL8H,OAAS,kBAAM,cAACC,GAAD,OAEtB,cAAC,KAAD,CAAO/H,KAAK,oBACL8H,OAAS,kBAAM,cAAC,GAAD,OAEtB,cAAC,KAAD,CAAO9H,KAAK,SACL8H,OAAS,kBAAM,cAAC,GAAD,OACtB,cAAC,KAAD,CAAO9H,KAAK,SACL8H,OAAS,kBAAM,cAAC,GAAD,cChBtCE,KAASF,OACL,cAAC,KAAD,UACI,cAAC,KAAD,CAAU9I,MAAOA,EAAjB,SACI,cAAC,GAAD,QAEUiJ,SAASC,eAAe,W","file":"static/js/main.4885205b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Z1lI\",\"item\":\"Navbar_item__QorG0\",\"activeLink\":\"Navbar_activeLink__1BMQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionblock\":\"ProfileInfo_descriptionblock__3eTXw\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1I5oa\",\"contact\":\"ProfileInfo_contact__1Cebv\",\"profit\":\"ProfileInfo_profit__-rZ0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__27U8H\",\"dialogsItems\":\"dialogs_dialogsItems__3mBKO\",\"active\":\"dialogs_active__1oi2A\",\"messages\":\"dialogs_messages__29YDr\",\"message\":\"dialogs_message__3R3a4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1gEhI\",\"pageNumber\":\"Paginator_pageNumber__2yT3e\",\"selectedPages\":\"Paginator_selectedPages__3qABV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__o4LG5\",\"posts\":\"MyPosts_posts__2JYHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__21sqc\",\"loginBlock\":\"Header_loginBlock__2Bpni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1HUVC\",\"selectedPage\":\"users_selectedPage__1Xe3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3M_nQ\"};","  import * as axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n         \"API-KEY\": \"1975d8d5-eb6f-420c-881f-610f1b4884af\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(page = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${page}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n\r\n    },\r\n     getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n\r\n           },\r\n}\r\n  export const profileAPI = {\r\n\r\n      getProfile(userId) {\r\n          return instance.get(`profile/` + userId);\r\n      },\r\n      getStatus(userId) {\r\n          return instance.get(`profile/status/` + userId);\r\n      },\r\n      updateStatus(status) {\r\n          return instance.put(`profile/status`, {status: status});\r\n      },\r\n      savePhoto(photoFile) {\r\n          const formData = new FormData();\r\n          formData.append(\"image\", photoFile);\r\n          return instance.put(`profile/photo`, formData, {\r\n              headers: {\r\n                  \"Content-Type\": \"multipart/form-data\"\r\n              }\r\n          });\r\n      }\r\n  }\r\n\r\nexport const authAPI = {\r\n    me() {\r\n      return  instance.get(`auth/me`)\r\n\r\n\r\n    }\r\n}","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_PHOTO_SUCCESS = \"SET_PHOTO_SUCCESS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case\r\n            SET_PHOTO_SUCCESS: {\r\n                return {\r\n                    ...state, profile: {...state.profile, photos: action.photos}\r\n\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const savePhotoSuccess = (photos) => ({type: SET_PHOTO_SUCCESS, photos})\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch( savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n\r\nexport default profileReducer;\r\n","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body})\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unFollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const sentCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(sentCurrentPage(currentPage));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\nconst followUnFollow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n          followUnFollow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess,);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n         followUnFollow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unFollowSuccess,);\r\n    }\r\n}\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: true\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}  })\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login));\r\n        }\r\n}\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport  thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './../dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"../../dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './dialogs.module.css';\r\nimport DialogItem from \"./DialogsItem/DialogsItem.js\";\r\nimport Message from \"./DialogsItem/Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <div>\r\n                    <div><textarea value={newMessageBody}\r\n                                   onChange={onNewMessageChange}\r\n                                   placeholder='Enter your message'></textarea></div>\r\n                    <div><button onClick={onSendMessageClick}>Send</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state ) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n                if (!this.props.isAuth) return <Redirect to=\"/Login\"/>\r\n                return <Component {...this.props} />\r\n            }\r\n\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent)\r\n      return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nexport default\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\n\r\n\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) =>{\r\n    let pagesCount = Math.ceil( totalUsersCount / pageSize);\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {setPortionNumber(portionNumber-1)}}> PREV </button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPages]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key = {p}\r\n                             onClick={(e) => {\r\n                             onPageChanged(p);\r\n            }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick = {() =>{setPortionNumber(portionNumber+1)}}>NEXT</button>}\r\n\r\n\r\n    </div>\r\n}\r\nexport default  Paginator;","export default __webpack_public_path__ + \"static/media/goose.6d1bdaa2.png\";","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../api/assest/images/goose.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                unfollow(user.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id)\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../Profile/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\n\r\nconst Users = ({ users, pageSize,\r\n               currentPage, onPageChanged, portionSize,totalUsersCount,followingInProgress,\r\n                   unfollow, follow,  }) => {\r\n\r\n    return <div>\r\n     <div>\r\n          <Paginator totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n                     currentPage={currentPage} onPageChanged={onPageChanged}\r\n                     portionSize={portionSize} />\r\n    </div>\r\n        <div>\r\n        {\r\n            users.map(u => <User user={u}\r\n                                 key={u.id}\r\n                                 followingInProgress={followingInProgress}\r\n                                 unfollow={unfollow}\r\n                                 follow={follow}/>\r\n            )\r\n        }\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.1f8dfed7.svg\";","import React from 'react';\r\nimport preloader from \"../../../api/assest/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import\r\n    React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    follow, getUsers,\r\n    sentCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from '../../redux/users-reduser';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/users-selectors\";\r\nimport Paginator from \"../Profile/Paginator\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize, this.props.onPageChanged);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.page}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n    // let mapStateToProps = (state) => {\r\n    //     return {\r\n    //         users: requestUsers(state) ,\r\n    //         pageSize: getPageSize(state),\r\n    //         totalUsersCount: getTotalUsersCount(state),\r\n    //         currentPage: getCurrentPage(state),\r\n    //         isFetching: getIsFetching(state),\r\n    //         followingInProgress: getFollowingInProgress(state),\r\n    //     }\r\n    // }\r\n\r\n\r\n export default compose(\r\n      withAuthRedirect,\r\n     connect(mapStateToProps, {follow, unfollow,\r\n            sentCurrentPage,\r\n           toggleFollowingProgress, getUsers: getUsers})\r\n ) (UsersContainer)","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n            { props.message }\r\n            <div>\r\n                <span>like</span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPost }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n\r\n","\r\nimport React, {useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect( () => {\r\n     setStatus(props.status)\r\n    }, [props.status]);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n         props.updateStatus(status)\r\n    }\r\n   const onStatusChange = (e) => {\r\n        setStatus( e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div className={s.profit}>\r\n           <b >Status:</b><span onDoubleClick={activateEditMode}>{props.status || \"-----\"} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatuswhisHooks\";\r\nimport userPhoto from \"../../../api/assest/images/goose.png\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto,}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm profile={profile}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst ProfileData = ({profile, goToEditMode, isOwner,}) => {\r\n    return (\r\n        <div className={s.profit}>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode} className={s.profit}>edit</button>\r\n            </div>}\r\n            <div className={s.contact}>\r\n                <b> full name </b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b> Looking for a job </b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b> My professional skills </b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b> About me </b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b> Contacts </b> : {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\nconst ProfileDataForm = ({profile}) => {\r\n    return <div className={s.contact}>\r\n                <b>Form</b>\r\n          </div>\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nimport MyPostsContainer from \"./MyPost/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/Profileinfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            {<ProfileInfo savePhoto={props.savePhoto}\r\n                          isOwner={props.isOwner}\r\n                          profile={props.profile}\r\n                          status={props.status}\r\n                          updateStatus={props.updateStatus}/>}\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\nrefreshProfile () {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n        userId = 2;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n}\r\n    componentDidMount() {\r\n     this.refreshProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if ( this.props.match.params.userId !==  prevProps.match.params.userId) {\r\n        this.refreshProfile()\r\n    }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={ !this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src=\"https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg \" />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth ? props.login\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);\r\n","import React from \"react\";\r\n// import {createForm} from \"final-form\";\r\n//  import {Form, Field} from \"react-final-form\";\r\n\r\n\r\nconst MyForm = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div><h1>login</h1></div>\r\n            <form>\r\n                <div>\r\n                    <input placeholder={\"login\"}/>\r\n                </div>\r\n                <div>\r\n                    <input placeholder={\"password\"}/>\r\n                </div>\r\n                <div>\r\n                    <input type=\"checkbox\"/> remember me\r\n                </div>\r\n                <div>\r\n                    <button>login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n// const Login = (props) => {\r\n//     const onSubmit = (formData) => {\r\n//            console.log(formData)\r\n//     }\r\n//     const LoginRedux =  createForm ({\r\n//         MyForm,\r\n//        onSubmit\r\n//     })\r\n//        return (\r\n//\r\n//            <div>\r\n//                <h1>Login</h1>\r\n//                <LoginRedux onSubmit={onSubmit()}/>\r\n//            </div>\r\n//        )\r\n//    }\r\nexport default MyForm;\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/login/login\";\n\nconst App = () => {\n    return (\n        <div className='app-wrapper'>\n            <HeaderContainer />\n            <Navbar />\n            <div className='app-wrapper-content'>\n                <Route path='/dialogs'\n                       render={ () => <DialogsContainer /> }/>\n\n                <Route path='/profile/:userId?'\n                       render={ () => <ProfileContainer /> }/>\n\n                <Route path='/users'\n                       render={ () => <UsersContainer /> }/>\n                <Route path='/login'\n                       render={ () => <LoginPage /> }/>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","import store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\n\n\n\n\n"],"sourceRoot":""}